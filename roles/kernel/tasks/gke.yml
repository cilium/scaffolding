---
- block:

  - name: Set kubeconfig
    set_fact:
      kubeconfig: "{{archive_dir}}/kubeconfig"
    when: kubeconfig|length < 1

  - name: Capture nodes
    shell: |
     export KUBECONFIG={{kubeconfig}}
     kubectl get nodes --no-headers -o custom-columns=:.metadata.name
    register: node_list

  - name: Create CM
    shell: |
      export KUBECONFIG={{kubeconfig}}
      kubectl apply -f {{ role_path }}/files/cm-kernel.yaml

  - name: Create DS
    shell: |
      export KUBECONFIG={{kubeconfig}}
      export KERNEL_VERSION={{kernel}}
      envsubst < {{ role_path }}/files/ds-kernel.yaml | kubectl apply -f -

  - name: Check on the rollout
    shell: |
      export KUBECONFIG={{kubeconfig}}
      kubectl rollout status ds/node-initializer

  - name: Restart GKE nodes
    shell: |
      export KUBECONFIG={{kubeconfig}}
      for n in $(kubectl get nodes -o custom-columns=:.metadata.name --no-headers); do kubectl node restart --force -s 0 -rd 600 -l kubernetes.io/hostname=$n & done

  - name: Delete DS
    shell: |
      export KUBECONFIG={{kubeconfig}}
      kubectl delete ds/node-initializer

  - name: Pause for 1 minute for vms to reboot
    pause:
      minutes: 1

  - name: Check node status
    shell: |
      export KUBECONFIG={{kubeconfig}}
      kubectl wait --for=condition=Ready nodes --all --timeout=600s

  when: kernel | length > 1