---

- name: Capture nodes
  shell: |
   export KUBECONFIG={{kubeconfig}}
   kubectl get nodes --no-headers -o custom-columns=:.metadata.name
  register: node_list

- name: Create CM
  shell: |
    export KUBECONFIG={{kubeconfig}}
    kubectl apply -f {{ role_path }}/files/cm-kernel.yaml

- name: Create DS
  shell: |
    export KUBECONFIG={{kubeconfig}}
    export KERNEL_VERSION={{kernel}}
    envsubst < {{ role_path }}/files/ds-kernel.yaml | kubectl apply -f -

- name: Check on the rollout
  shell: |
    export KUBECONFIG={{kubeconfig}}
    kubectl rollout status ds/node-initializer

# Assumption we are logged into the account, might need to add login method to use gcloud cli
- name: Restart GKE nodes
  shell: |
    export GOOGLE_APPLICATION_CREDENTIALS={{ gke['sa_file']}}
    gcloud auth activate-service-account $(cat {{gke['sa_file']}} | jq "" ) --key-file={{ gke['sa_file'] }} --project $(cat {{gke['sa_file']}} | jq ".project_id" )
    yes | gcloud config set project {{ gke['project'] }}
    gcloud compute instances reset --zone {{ gke['region'] }} {{ item }}
  loop: "{{ node_list.stdout_lines }}"

- name: Delete DS
  shell: |
    export KUBECONFIG={{kubeconfig}}
    kubectl delete ds/node-initializer

- name: Pause for 1 minute for vms to reboot
  pause:
    minutes: 1

- name: Check node status
  shell: |
    export KUBECONFIG={{kubeconfig}}
    kubectl wait --for=condition=Ready nodes --all --timeout=600s

- name: Drop kernel in archive_dir
  shell: |
    echo {{kernel}} > {{archive_dir}}/kernel