---

- block:
    - name: Destroy OCP Cluster
      shell: |
         set -o pipefail
         /tmp/openshift-install destroy cluster --dir {{ocp_install_dir}} --log-level=debug
  when: destroy

- block:
  - set_fact:
      ocp_cluster_name: "{{cluster_prefix}}-{{ansible_facts['date_time']['epoch']}}"

  # If something stops the install, we need to check to see if the metadata.json exists.
  # If it does not, we need to build one and drop it in.

  - name: Download latest OCP Installer
    shell: |
        curl -sSL --remote-name-all {{ocp['base_url']}}/{{ ocp['version'] }}/openshift-install-linux.tar.gz
        tar xzvfC openshift-install-linux.tar.gz /tmp
        rm openshift-install-linux.tar.gz
        /tmp/openshift-install version

  # Temp solution, need to template out
  - name: Copy Install-Config
    shell: |
      mkdir -p /tmp/{{ ocp_cluster_name }}
      cp {{ role_path }}/files/install-config.yaml /tmp/{{ ocp_cluster_name }}

  - name: Build Manifest
    shell: |
       /tmp/openshift-install create manifests --dir /tmp/{{ ocp_cluster_name }}

  - name: Drop in Cilium Manifest
    shell: |
      curl -sSL "https://github.com/cilium/cilium-olm/archive/{{ocp['cilium_olm_rev']}}.tar.gz" -o /tmp/cilium-olm.tgz
      tar -C /tmp -xf /tmp/cilium-olm.tgz
      cp /tmp/cilium-olm-{{ocp['cilium_olm_rev']}}/manifests/cilium.v{{ocp['cilium_version']}}/* "/tmp/{{ocp_cluster_name}}/manifests"
      rm -rf -- /tmp/cilium-olm.tgz "/tmp/cilium-olm-{{ocp['cilium_olm_rev']}}"

  - name: Install OCP on AWS with Cilium as CNI
    shell: |
      set -o pipefail
      /tmp/openshift-install create cluster --dir /tmp/{{ ocp_cluster_name }} --log-level=debug
  when: create
