---

- name: Get current clouds
  google.cloud.gcp_container_cluster_info:
    location: "{{ gke['region'] }}"
    project: "{{ gke['project'] }}"
    auth_kind: "{{ gke['auth_kind'] }}"
    service_account_file: "{{ gke['sa_file'] }}"
    scopes:
      - https://www.googleapis.com/auth/cloud-platform
  register: clusters

# We should try to stay < 5 clusters created at once, or have something
# to limit the number of clusters we have.
#- debug: var=clusters

- block:
  - name: Capture Cluster name from the archive_dir
    slurp:
      src: "{{archive_dir}}/cluster_name"
    register: rm_cluster_name

  - name: Capture Cluster region from the archive_dir
    slurp:
      src: "{{archive_dir}}/region"
    register: cluster_loc

  - name: Cleanup GKE clusters
    gcp_container_cluster:
      name: "{{ rm_cluster_name.content | b64decode | trim }}"
      location: "{{ cluster_loc.content | b64decode | trim }}"
      project: "{{ gke['project'] }}"
      auth_kind: "{{ gke['auth_kind'] }}"
      service_account_file: "{{ gke['sa_file'] }}"
      scopes:
        - https://www.googleapis.com/auth/cloud-platform
      state: absent

  - name: Add metadata about the cluster being deleted
    copy:
      content: "true"
      dest: "{{archive_dir}}/destroyed"

  when: destroy

- block:

  - set_fact:
      gke_cluster_name: "{{cluster_prefix}}-{{start_time}}"
  - debug:
      msg: GKE Cluster name {{ gke_cluster_name }}

  - name: Drop project in metadata
    shell: |
      mkdir -p {{archive_dir}}
      echo {{gke['project']}} > {{archive_dir}}/project
      echo gke > {{archive_dir}}/platform
      echo {{gke['region']}} > {{archive_dir}}/region
      echo {{gke_cluster_name}} > {{archive_dir}}/cluster_name
      echo {{start_time}} > {{archive_dir}}/starttime

  - name: Create GKE cluster
    google.cloud.gcp_container_cluster:
      name: "{{ gke_cluster_name }}"
      location: "{{ gke['region'] }}"
      project: "{{ gke['project'] }}"
      cluster_ipv4_cidr: "{{ gke['cluster_ipv4_cidr'] }}"
      initial_node_count: "{{ num_nodes | int}}"
      node_config:
        image_type: "{{ gke['image_type'] }}"
        machine_type: "{{ gke['machine_type'] }}"
        taints:
          - key: "node.cilium.io/agent-not-ready"
            effect: NO_SCHEDULE
            value: "true"
        labels:
          use: PerfCI
          name: "{{ gke_cluster_name }}"
      default_max_pods_constraint:
        max_pods_per_node: "110"
      auth_kind: "{{ gke['auth_kind'] }}"
      service_account_file: "{{ gke['sa_file'] }}"
      scopes:
        - https://www.googleapis.com/auth/cloud-platform
      state: present
    register: cluster
  
  - name: Save cluster info to archive
    copy:
      content: "{{cluster}}"
      dest: "{{archive_dir}}/cluster.json"

  - name: Save cluster info to archive
    copy:
      content: "{{cluster}}"
      dest: "{{archive_dir}}/cluster.json"

  - name: Create GKE node pool
    google.cloud.gcp_container_node_pool:
      name: default
      initial_node_count: "{{ num_nodes | int}}"
      config:
        image_type: "{{ gke['image_type'] }}"
        machine_type: "{{ gke['machine_type'] }}"
        taints:
          - key: "node.cilium.io/agent-not-ready"
            effect: NO_SCHEDULE
            value: "true"
        labels:
          use: PerfCI
          name: "{{ gke_cluster_name }}"
      cluster: "{{ cluster }}"
      auth_kind: "{{ gke['auth_kind'] }}"
      location: "{{ gke['region'] }}"
      project: "{{ gke['project'] }}"
      service_account_file: "{{ gke['sa_file'] }}"
      scopes:
        - https://www.googleapis.com/auth/cloud-platform
      state: present

  - name: Generate kubeconfig due to - https://github.com/ansible/ansible/issues/66096
    shell: |
      export GOOGLE_APPLICATION_CREDENTIALS={{ gke['sa_file']}}
      gcloud auth activate-service-account $(jq .client_email -r {{ gke['sa_file'] }}) --key-file={{ gke['sa_file'] }} --project $(jq .project_id -r {{ gke['sa_file'] }})
      export KUBECONFIG={{archive_dir}}/kubeconfig
      gcloud config set project {{ gke['project'] }}
      gcloud config set compute/zone {{ gke['region'] }}
      gcloud auth activate-service-account --key-file {{ gke['sa_file'] }}
      gcloud container clusters get-credentials {{ gke_cluster_name }}

  - set_fact:
      kubeconfig: "{{archive_dir}}/kubeconfig"

  when: create