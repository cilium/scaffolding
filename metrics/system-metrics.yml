---
# Containers & pod metrics - we could look into limit this to just the CNI pods
- query: sum(irate(container_cpu_usage_seconds_total{name!="",container!="POD"}[2m]) * 100) by (container, pod, namespace, instance)
  metricName: containerCPU

- query: sum(container_memory_rss{name!="",container!="POD"}) by (container, pod, namespace, instance)
  metricName: containerMemory

- query: (sum(rate(container_fs_writes_bytes_total{container!="",device!~".+dm.+"}[5m])) by (device, container, instance) and on (instance) kube_node_role{}) > 0
  metricName: containerDiskUsage

# Node metrics
- query: sum(irate(node_cpu_seconds_total[2m])) by (mode,node) > 0
  metricName: nodeCPU

- query: avg(node_memory_MemAvailable_bytes) by (node)
  metricName: nodeMemoryAvailable

- query: avg(node_memory_MemTotal_bytes) by (node)
  metricName: nodeMemoryTotal
  instant: true

- query: avg(node_memory_Cached_bytes) by (node) + avg(node_memory_Buffers_bytes) by (node)
  metricName: nodeMemoryCached+nodeMemoryBuffers

- query: avg(node_memory_Active_bytes) by (node)
  metricName: nodeMemoryActive

- query: irate(node_network_receive_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: rxNetworkBytes

- query: irate(node_network_transmit_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: txNetworkBytes

- query: rate(node_disk_written_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskWrittenBytes

- query: rate(node_disk_read_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskReadBytes

# Cluster metrics
- query: sum(kube_namespace_status_phase) by (phase) > 0
  metricName: namespaceCount

- query: sum(kube_pod_status_phase{}) by (phase)
  metricName: podStatusCount

- query: count(kube_secret_info{})
  metricName: secretCount

- query: count(kube_deployment_labels{})
  metricName: deploymentCount

- query: count(kube_configmap_info{})
  metricName: configmapCount

- query: count(kube_service_info{})
  metricName: serviceCount

- query: kube_node_role
  metricName: nodeRoles
  instant: true

- query: sum(kube_node_status_condition{status="true"}) by (condition)
  metricName: nodeStatus

- query: cluster_version{type="completed"}
  metricName: clusterVersion
  instant: true

- query: topk(10,ALERTS{severity!="none"})
  metricName: alerts

# Cilium specific metrics
- query: avg(histogram_quantile(0.90, rate(cilium_endpoint_regeneration_time_stats_seconds_bucket{k8s_app="cilium", scope!="total"}[5m]))) by (scope)
  metricName: ciliumEndpointRegeneration
 
- query: cilium_bpf_maps_virtual_memory_max_bytes{k8s_app="cilium"} + cilium_bpf_progs_virtual_memory_max_bytes{k8s_app="cilium"}
  metricName: ciliumBPFMemoryUsage
  
- query: cilium_bpf_map_ops_total
  metricName: ciliumBPFMapOps
  
- query: cilium_policy_regeneration_time_stats_seconds_sum
  metricName: ciliumPolicyRegenSeconds
  
- query: cilium_ipam_events_total
  metricName: ciliumIPAMEvents
  
- query: go_goroutines{k8s_app="cilium"}
  metricName: ciliumGoRoutines
